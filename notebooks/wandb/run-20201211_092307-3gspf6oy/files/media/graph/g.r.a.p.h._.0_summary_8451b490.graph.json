{"format": "torch", "nodes": [{"name": "module", "id": 140141974966032, "class_name": "Net(\n  (backbone): Sequential(\n    (0): EfficientNet(\n      (conv_stem): Conv2d(3, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (act1): ReLU(inplace=True)\n      (blocks): Sequential(\n        (0): Sequential(\n          (0): DepthwiseSeparableConv(\n            (conv_dw): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)\n            (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): ReLU(inplace=True)\n            (conv_pw): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): Identity()\n          )\n        )\n        (1): Sequential(\n          (0): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(8, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(8, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): ReLU(inplace=True)\n            (conv_dw): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=96, bias=False)\n            (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): ReLU(inplace=True)\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (1): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(12, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(12, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): ReLU(inplace=True)\n            (conv_dw): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=72, bias=False)\n            (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): ReLU(inplace=True)\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(36, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(36, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n        )\n        (2): Sequential(\n          (0): InvertedResidual(\n            (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(48, 48, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=48, bias=False)\n              (1): Conv2d(48, 48, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=48, bias=False)\n              (2): Conv2d(48, 48, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=48, bias=False)\n            )\n            (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(144, 12, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(12, 144, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): Conv2d(144, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (1): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120, bias=False)\n              (1): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)\n            )\n            (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(240, 20, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(20, 240, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (2): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120, bias=False)\n              (1): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)\n            )\n            (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(240, 20, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(20, 240, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (3): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120, bias=False)\n              (1): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)\n            )\n            (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(240, 20, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(20, 240, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n        )\n        (3): Sequential(\n          (0): InvertedResidual(\n            (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)\n              (1): Conv2d(80, 80, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=80, bias=False)\n              (2): Conv2d(80, 80, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=80, bias=False)\n            )\n            (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(240, 10, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(10, 240, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(120, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(120, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (1): InvertedResidual(\n            (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(240, 240, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=240, bias=False)\n              (1): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)\n            )\n            (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(480, 20, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(20, 480, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (2): InvertedResidual(\n            (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(240, 240, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=240, bias=False)\n              (1): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)\n            )\n            (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(480, 20, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(20, 480, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n        )\n        (4): Sequential(\n          (0): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=160, bias=False)\n              (1): Conv2d(160, 160, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=160, bias=False)\n              (2): Conv2d(160, 160, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=160, bias=False)\n            )\n            (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(480, 40, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(40, 480, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(240, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(240, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (1): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(60, 180, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(60, 180, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(360, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(90, 90, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=90, bias=False)\n              (1): Conv2d(90, 90, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=90, bias=False)\n              (2): Conv2d(90, 90, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=90, bias=False)\n              (3): Conv2d(90, 90, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=90, bias=False)\n            )\n            (bn2): BatchNorm2d(360, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(360, 60, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(60, 360, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(180, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(180, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (2): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(60, 180, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(60, 180, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(360, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(90, 90, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=90, bias=False)\n              (1): Conv2d(90, 90, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=90, bias=False)\n              (2): Conv2d(90, 90, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=90, bias=False)\n              (3): Conv2d(90, 90, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=90, bias=False)\n            )\n            (bn2): BatchNorm2d(360, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(360, 60, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(60, 360, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(180, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(180, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n        )\n        (5): Sequential(\n          (0): InvertedResidual(\n            (conv_pw): Conv2d(120, 720, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(720, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)\n              (1): Conv2d(144, 144, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=144, bias=False)\n              (2): Conv2d(144, 144, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=144, bias=False)\n              (3): Conv2d(144, 144, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=144, bias=False)\n              (4): Conv2d(144, 144, kernel_size=(11, 11), stride=(2, 2), padding=(5, 5), groups=144, bias=False)\n            )\n            (bn2): BatchNorm2d(720, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(720, 60, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(60, 720, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): Conv2d(720, 200, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn3): BatchNorm2d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (1): InvertedResidual(\n            (conv_pw): Conv2d(200, 1200, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(300, 300, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=300, bias=False)\n              (1): Conv2d(300, 300, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=300, bias=False)\n              (2): Conv2d(300, 300, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=300, bias=False)\n              (3): Conv2d(300, 300, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=300, bias=False)\n            )\n            (bn2): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(1200, 100, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(100, 1200, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(600, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(600, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (2): InvertedResidual(\n            (conv_pw): Conv2d(200, 1200, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(300, 300, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=300, bias=False)\n              (1): Conv2d(300, 300, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=300, bias=False)\n              (2): Conv2d(300, 300, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=300, bias=False)\n              (3): Conv2d(300, 300, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=300, bias=False)\n            )\n            (bn2): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(1200, 100, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(100, 1200, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(600, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(600, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n        )\n      )\n      (conv_head): Conv2d(200, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn2): BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (act2): ReLU(inplace=True)\n      (global_pool): SelectAdaptivePool2d (pool_type=avg, flatten=True)\n      (classifier): Linear(in_features=1536, out_features=512, bias=True)\n    )\n    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): ReLU()\n  )\n  (gender_head): Sequential(\n    (0): Dropout(p=0.2, inplace=False)\n    (1): Linear(in_features=512, out_features=1, bias=True)\n    (2): Sigmoid()\n  )\n  (age_head): Sequential(\n    (0): Linear(in_features=512, out_features=1, bias=True)\n  )\n)", "parameters": [], "output_shape": [[16, 1], [16, 1]], "num_parameters": []}, {"name": "module", "id": 140141718388800, "class_name": "Net(\n  (backbone): Sequential(\n    (0): EfficientNet(\n      (conv_stem): Conv2d(3, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (act1): ReLU(inplace=True)\n      (blocks): Sequential(\n        (0): Sequential(\n          (0): DepthwiseSeparableConv(\n            (conv_dw): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)\n            (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): ReLU(inplace=True)\n            (conv_pw): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): Identity()\n          )\n        )\n        (1): Sequential(\n          (0): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(8, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(8, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): ReLU(inplace=True)\n            (conv_dw): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=96, bias=False)\n            (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): ReLU(inplace=True)\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (1): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(12, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(12, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): ReLU(inplace=True)\n            (conv_dw): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=72, bias=False)\n            (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): ReLU(inplace=True)\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(36, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(36, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n        )\n        (2): Sequential(\n          (0): InvertedResidual(\n            (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(48, 48, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=48, bias=False)\n              (1): Conv2d(48, 48, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=48, bias=False)\n              (2): Conv2d(48, 48, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=48, bias=False)\n            )\n            (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(144, 12, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(12, 144, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): Conv2d(144, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (1): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120, bias=False)\n              (1): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)\n            )\n            (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(240, 20, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(20, 240, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (2): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120, bias=False)\n              (1): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)\n            )\n            (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(240, 20, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(20, 240, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (3): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120, bias=False)\n              (1): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)\n            )\n            (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(240, 20, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(20, 240, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n        )\n        (3): Sequential(\n          (0): InvertedResidual(\n            (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)\n              (1): Conv2d(80, 80, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=80, bias=False)\n              (2): Conv2d(80, 80, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=80, bias=False)\n            )\n            (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(240, 10, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(10, 240, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(120, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(120, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (1): InvertedResidual(\n            (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(240, 240, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=240, bias=False)\n              (1): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)\n            )\n            (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(480, 20, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(20, 480, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (2): InvertedResidual(\n            (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(240, 240, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=240, bias=False)\n              (1): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)\n            )\n            (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(480, 20, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(20, 480, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n        )\n        (4): Sequential(\n          (0): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=160, bias=False)\n              (1): Conv2d(160, 160, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=160, bias=False)\n              (2): Conv2d(160, 160, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=160, bias=False)\n            )\n            (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(480, 40, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(40, 480, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(240, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(240, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (1): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(60, 180, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(60, 180, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(360, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(90, 90, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=90, bias=False)\n              (1): Conv2d(90, 90, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=90, bias=False)\n              (2): Conv2d(90, 90, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=90, bias=False)\n              (3): Conv2d(90, 90, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=90, bias=False)\n            )\n            (bn2): BatchNorm2d(360, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(360, 60, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(60, 360, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(180, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(180, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (2): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(60, 180, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(60, 180, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(360, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(90, 90, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=90, bias=False)\n              (1): Conv2d(90, 90, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=90, bias=False)\n              (2): Conv2d(90, 90, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=90, bias=False)\n              (3): Conv2d(90, 90, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=90, bias=False)\n            )\n            (bn2): BatchNorm2d(360, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(360, 60, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(60, 360, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(180, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(180, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n        )\n        (5): Sequential(\n          (0): InvertedResidual(\n            (conv_pw): Conv2d(120, 720, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(720, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)\n              (1): Conv2d(144, 144, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=144, bias=False)\n              (2): Conv2d(144, 144, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=144, bias=False)\n              (3): Conv2d(144, 144, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=144, bias=False)\n              (4): Conv2d(144, 144, kernel_size=(11, 11), stride=(2, 2), padding=(5, 5), groups=144, bias=False)\n            )\n            (bn2): BatchNorm2d(720, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(720, 60, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(60, 720, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): Conv2d(720, 200, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn3): BatchNorm2d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (1): InvertedResidual(\n            (conv_pw): Conv2d(200, 1200, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(300, 300, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=300, bias=False)\n              (1): Conv2d(300, 300, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=300, bias=False)\n              (2): Conv2d(300, 300, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=300, bias=False)\n              (3): Conv2d(300, 300, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=300, bias=False)\n            )\n            (bn2): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(1200, 100, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(100, 1200, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(600, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(600, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (2): InvertedResidual(\n            (conv_pw): Conv2d(200, 1200, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(300, 300, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=300, bias=False)\n              (1): Conv2d(300, 300, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=300, bias=False)\n              (2): Conv2d(300, 300, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=300, bias=False)\n              (3): Conv2d(300, 300, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=300, bias=False)\n            )\n            (bn2): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(1200, 100, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(100, 1200, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(600, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(600, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n        )\n      )\n      (conv_head): Conv2d(200, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn2): BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (act2): ReLU(inplace=True)\n      (global_pool): SelectAdaptivePool2d (pool_type=avg, flatten=True)\n      (classifier): Linear(in_features=1536, out_features=512, bias=True)\n    )\n    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): ReLU()\n  )\n  (gender_head): Sequential(\n    (0): Dropout(p=0.2, inplace=False)\n    (1): Linear(in_features=512, out_features=1, bias=True)\n    (2): Sigmoid()\n  )\n  (age_head): Sequential(\n    (0): Linear(in_features=512, out_features=1, bias=True)\n  )\n)", "parameters": [], "output_shape": [[16, 1], [16, 1]], "num_parameters": []}, {"name": "module", "id": 140141718389328, "class_name": "Net(\n  (backbone): Sequential(\n    (0): EfficientNet(\n      (conv_stem): Conv2d(3, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (act1): ReLU(inplace=True)\n      (blocks): Sequential(\n        (0): Sequential(\n          (0): DepthwiseSeparableConv(\n            (conv_dw): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)\n            (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): ReLU(inplace=True)\n            (conv_pw): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): Identity()\n          )\n        )\n        (1): Sequential(\n          (0): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(8, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(8, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): ReLU(inplace=True)\n            (conv_dw): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=96, bias=False)\n            (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): ReLU(inplace=True)\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (1): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(12, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(12, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): ReLU(inplace=True)\n            (conv_dw): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=72, bias=False)\n            (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): ReLU(inplace=True)\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(36, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(36, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n        )\n        (2): Sequential(\n          (0): InvertedResidual(\n            (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(48, 48, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=48, bias=False)\n              (1): Conv2d(48, 48, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=48, bias=False)\n              (2): Conv2d(48, 48, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=48, bias=False)\n            )\n            (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(144, 12, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(12, 144, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): Conv2d(144, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (1): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120, bias=False)\n              (1): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)\n            )\n            (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(240, 20, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(20, 240, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (2): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120, bias=False)\n              (1): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)\n            )\n            (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(240, 20, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(20, 240, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (3): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120, bias=False)\n              (1): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)\n            )\n            (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(240, 20, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(20, 240, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n        )\n        (3): Sequential(\n          (0): InvertedResidual(\n            (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)\n              (1): Conv2d(80, 80, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=80, bias=False)\n              (2): Conv2d(80, 80, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=80, bias=False)\n            )\n            (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(240, 10, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(10, 240, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(120, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(120, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (1): InvertedResidual(\n            (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(240, 240, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=240, bias=False)\n              (1): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)\n            )\n            (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(480, 20, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(20, 480, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (2): InvertedResidual(\n            (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(240, 240, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=240, bias=False)\n              (1): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)\n            )\n            (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(480, 20, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(20, 480, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n        )\n        (4): Sequential(\n          (0): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=160, bias=False)\n              (1): Conv2d(160, 160, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=160, bias=False)\n              (2): Conv2d(160, 160, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=160, bias=False)\n            )\n            (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(480, 40, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(40, 480, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(240, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(240, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (1): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(60, 180, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(60, 180, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(360, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(90, 90, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=90, bias=False)\n              (1): Conv2d(90, 90, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=90, bias=False)\n              (2): Conv2d(90, 90, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=90, bias=False)\n              (3): Conv2d(90, 90, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=90, bias=False)\n            )\n            (bn2): BatchNorm2d(360, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(360, 60, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(60, 360, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(180, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(180, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (2): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(60, 180, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(60, 180, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(360, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(90, 90, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=90, bias=False)\n              (1): Conv2d(90, 90, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=90, bias=False)\n              (2): Conv2d(90, 90, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=90, bias=False)\n              (3): Conv2d(90, 90, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=90, bias=False)\n            )\n            (bn2): BatchNorm2d(360, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(360, 60, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(60, 360, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(180, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(180, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n        )\n        (5): Sequential(\n          (0): InvertedResidual(\n            (conv_pw): Conv2d(120, 720, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(720, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)\n              (1): Conv2d(144, 144, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=144, bias=False)\n              (2): Conv2d(144, 144, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=144, bias=False)\n              (3): Conv2d(144, 144, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=144, bias=False)\n              (4): Conv2d(144, 144, kernel_size=(11, 11), stride=(2, 2), padding=(5, 5), groups=144, bias=False)\n            )\n            (bn2): BatchNorm2d(720, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(720, 60, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(60, 720, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): Conv2d(720, 200, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn3): BatchNorm2d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (1): InvertedResidual(\n            (conv_pw): Conv2d(200, 1200, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(300, 300, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=300, bias=False)\n              (1): Conv2d(300, 300, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=300, bias=False)\n              (2): Conv2d(300, 300, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=300, bias=False)\n              (3): Conv2d(300, 300, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=300, bias=False)\n            )\n            (bn2): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(1200, 100, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(100, 1200, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(600, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(600, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (2): InvertedResidual(\n            (conv_pw): Conv2d(200, 1200, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(300, 300, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=300, bias=False)\n              (1): Conv2d(300, 300, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=300, bias=False)\n              (2): Conv2d(300, 300, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=300, bias=False)\n              (3): Conv2d(300, 300, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=300, bias=False)\n            )\n            (bn2): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(1200, 100, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(100, 1200, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(600, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(600, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n        )\n      )\n      (conv_head): Conv2d(200, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn2): BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (act2): ReLU(inplace=True)\n      (global_pool): SelectAdaptivePool2d (pool_type=avg, flatten=True)\n      (classifier): Linear(in_features=1536, out_features=512, bias=True)\n    )\n    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): ReLU()\n  )\n  (gender_head): Sequential(\n    (0): Dropout(p=0.2, inplace=False)\n    (1): Linear(in_features=512, out_features=1, bias=True)\n    (2): Sigmoid()\n  )\n  (age_head): Sequential(\n    (0): Linear(in_features=512, out_features=1, bias=True)\n  )\n)", "parameters": [], "output_shape": [[16, 1], [16, 1]], "num_parameters": []}, {"name": "module", "id": 140141718389184, "class_name": "Net(\n  (backbone): Sequential(\n    (0): EfficientNet(\n      (conv_stem): Conv2d(3, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (act1): ReLU(inplace=True)\n      (blocks): Sequential(\n        (0): Sequential(\n          (0): DepthwiseSeparableConv(\n            (conv_dw): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)\n            (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): ReLU(inplace=True)\n            (conv_pw): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): Identity()\n          )\n        )\n        (1): Sequential(\n          (0): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(8, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(8, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): ReLU(inplace=True)\n            (conv_dw): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=96, bias=False)\n            (bn2): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): ReLU(inplace=True)\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(48, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (1): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(12, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(12, 36, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): ReLU(inplace=True)\n            (conv_dw): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=72, bias=False)\n            (bn2): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): ReLU(inplace=True)\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(36, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(36, 12, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n        )\n        (2): Sequential(\n          (0): InvertedResidual(\n            (conv_pw): Conv2d(24, 144, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(48, 48, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=48, bias=False)\n              (1): Conv2d(48, 48, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=48, bias=False)\n              (2): Conv2d(48, 48, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=48, bias=False)\n            )\n            (bn2): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(144, 12, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(12, 144, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): Conv2d(144, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (1): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120, bias=False)\n              (1): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)\n            )\n            (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(240, 20, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(20, 240, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (2): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120, bias=False)\n              (1): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)\n            )\n            (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(240, 20, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(20, 240, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (3): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(20, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(120, 120, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=120, bias=False)\n              (1): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)\n            )\n            (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(240, 20, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(20, 240, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(120, 20, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n        )\n        (3): Sequential(\n          (0): InvertedResidual(\n            (conv_pw): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(80, 80, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=80, bias=False)\n              (1): Conv2d(80, 80, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=80, bias=False)\n              (2): Conv2d(80, 80, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=80, bias=False)\n            )\n            (bn2): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(240, 10, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(10, 240, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(120, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(120, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (1): InvertedResidual(\n            (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(240, 240, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=240, bias=False)\n              (1): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)\n            )\n            (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(480, 20, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(20, 480, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (2): InvertedResidual(\n            (conv_pw): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(240, 240, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=240, bias=False)\n              (1): Conv2d(240, 240, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=240, bias=False)\n            )\n            (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(480, 20, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(20, 480, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(240, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n        )\n        (4): Sequential(\n          (0): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=160, bias=False)\n              (1): Conv2d(160, 160, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=160, bias=False)\n              (2): Conv2d(160, 160, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=160, bias=False)\n            )\n            (bn2): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(480, 40, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(40, 480, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(240, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(240, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (1): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(60, 180, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(60, 180, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(360, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(90, 90, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=90, bias=False)\n              (1): Conv2d(90, 90, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=90, bias=False)\n              (2): Conv2d(90, 90, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=90, bias=False)\n              (3): Conv2d(90, 90, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=90, bias=False)\n            )\n            (bn2): BatchNorm2d(360, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(360, 60, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(60, 360, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(180, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(180, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (2): InvertedResidual(\n            (conv_pw): MixedConv2d(\n              (0): Conv2d(60, 180, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(60, 180, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn1): BatchNorm2d(360, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(90, 90, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=90, bias=False)\n              (1): Conv2d(90, 90, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=90, bias=False)\n              (2): Conv2d(90, 90, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=90, bias=False)\n              (3): Conv2d(90, 90, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=90, bias=False)\n            )\n            (bn2): BatchNorm2d(360, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(360, 60, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(60, 360, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(180, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(180, 60, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n        )\n        (5): Sequential(\n          (0): InvertedResidual(\n            (conv_pw): Conv2d(120, 720, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(720, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(144, 144, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=144, bias=False)\n              (1): Conv2d(144, 144, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=144, bias=False)\n              (2): Conv2d(144, 144, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), groups=144, bias=False)\n              (3): Conv2d(144, 144, kernel_size=(9, 9), stride=(2, 2), padding=(4, 4), groups=144, bias=False)\n              (4): Conv2d(144, 144, kernel_size=(11, 11), stride=(2, 2), padding=(5, 5), groups=144, bias=False)\n            )\n            (bn2): BatchNorm2d(720, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(720, 60, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(60, 720, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): Conv2d(720, 200, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn3): BatchNorm2d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (1): InvertedResidual(\n            (conv_pw): Conv2d(200, 1200, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(300, 300, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=300, bias=False)\n              (1): Conv2d(300, 300, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=300, bias=False)\n              (2): Conv2d(300, 300, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=300, bias=False)\n              (3): Conv2d(300, 300, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=300, bias=False)\n            )\n            (bn2): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(1200, 100, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(100, 1200, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(600, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(600, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n          (2): InvertedResidual(\n            (conv_pw): Conv2d(200, 1200, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            (bn1): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act1): SiLU(inplace=True)\n            (conv_dw): MixedConv2d(\n              (0): Conv2d(300, 300, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=300, bias=False)\n              (1): Conv2d(300, 300, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=300, bias=False)\n              (2): Conv2d(300, 300, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=300, bias=False)\n              (3): Conv2d(300, 300, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), groups=300, bias=False)\n            )\n            (bn2): BatchNorm2d(1200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n            (act2): SiLU(inplace=True)\n            (se): SqueezeExcite(\n              (conv_reduce): Conv2d(1200, 100, kernel_size=(1, 1), stride=(1, 1))\n              (act1): SiLU(inplace=True)\n              (conv_expand): Conv2d(100, 1200, kernel_size=(1, 1), stride=(1, 1))\n            )\n            (conv_pwl): MixedConv2d(\n              (0): Conv2d(600, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)\n              (1): Conv2d(600, 100, kernel_size=(1, 1), stride=(1, 1), bias=False)\n            )\n            (bn3): BatchNorm2d(200, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n          )\n        )\n      )\n      (conv_head): Conv2d(200, 1536, kernel_size=(1, 1), stride=(1, 1), bias=False)\n      (bn2): BatchNorm2d(1536, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (act2): ReLU(inplace=True)\n      (global_pool): SelectAdaptivePool2d (pool_type=avg, flatten=True)\n      (classifier): Linear(in_features=1536, out_features=512, bias=True)\n    )\n    (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (2): ReLU()\n  )\n  (gender_head): Sequential(\n    (0): Dropout(p=0.2, inplace=False)\n    (1): Linear(in_features=512, out_features=1, bias=True)\n    (2): Sigmoid()\n  )\n  (age_head): Sequential(\n    (0): Linear(in_features=512, out_features=1, bias=True)\n  )\n)", "parameters": [], "output_shape": [[16, 1], [16, 1]], "num_parameters": []}], "edges": []}